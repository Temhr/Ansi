# Load distro-specific variables
- include_vars: "distrobox_steamos_vars.yml"
  tags: always

- name: Get list of existing containers.
  become: false
  become_user: temhr
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      distrobox list | awk '{print $3}' | grep '^{{ distrobox_container_name }}$'
  register: distrobox_list
  failed_when: false
  changed_when: false

- name: Ensure that container home directory exists.
  become: true
  ansible.builtin.file:
    path: /home/temhr/containers/{{ distrobox_container_name }}
    state: directory
    owner: temhr
    group: root
    mode: 0770

- name: Ensure container has been created.
  become: false
  become_user: temhr
  when: distrobox_list.stdout == ""
  block:
    - name: Create a distrobox container.
      ansible.builtin.command:
        cmd: distrobox-create --yes --home /home/temhr/containers/{{ distrobox_container_name }} --name {{ distrobox_container_name }} --image {{ distrobox_image }}:latest
      changed_when: false

    - name: Enter container to perform initial setup.
      ansible.builtin.command:
        cmd: distrobox-enter {{ distrobox_container_name }} -- sh -c exit
      changed_when: true

    - name: Enter container to export app.
      ansible.builtin.command:
        cmd: distrobox-enter {{ distrobox_container_name }} -- {{distrobox_export_apps}} exit
      changed_when: true
